### DB Build
FROM postgres:15.6-alpine AS db-build
COPY docker/dev-dbs-init.sh /docker-entrypoint-initdb.d/

### App Build
FROM python:3.12-slim-bookworm AS app-build

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV VIRTUAL_ENV=/usr/local

# install psycopg2 dependencies.
RUN apt-get update && apt-get install -y \
    libpq-dev \
    gcc \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /code

WORKDIR /code

RUN pip install poetry
COPY pyproject.toml poetry.lock /code/
RUN poetry config virtualenvs.in-project false
RUN poetry config virtualenvs.create false
RUN poetry config virtualenvs.path /usr/local


## @TODO: Disable 'dev' - which currently breaks auth0 login
#RUN poetry install --only main,prod --no-root --no-interaction
RUN poetry install --only main,dev,test --no-root --no-interaction
COPY . /code
RUN poetry install --only main,dev,test --no-interaction
# RUN poetry run python manage.py migrate

EXPOSE 8000

CMD ["poetry", "run", "python", "manage.py", "runserver", "0.0.0.0:8000"]
